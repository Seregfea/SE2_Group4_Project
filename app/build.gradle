plugins {
    id 'com.android.application'
    id 'jacoco'
    id "org.sonarqube" version "3.5.0.2730"
}


android {
    compileSdk 33

    defaultConfig {
        applicationId "com.example.se2_group4_project"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    testOptions {
        unitTests.all {
            useJUnitPlatform()
            finalizedBy jacocoTestReport
        }
        unitTests.returnDefaultValues = true
    }
    buildFeatures {
        viewBinding = true
    }
    packagingOptions{
        exclude("META-INF/LICENSE.md")
        exclude("META-INF/LICENSE-notice.md")
    }
    namespace 'com.example.se2_group4_project'

    useLibrary 'android.test.mock'
    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'

}

task jacocoTestReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {

    reports {
        xml.enabled true
        xml.destination file("${project.projectDir}/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml")
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/javac/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.from = files([mainSrc])
    classDirectories.from = files([debugTree])
    executionData.from = files("${buildDir}/jacoco/testDebugUnitTest.exec")
}

sonarqube {
    properties {
        property ("sonar.projectKey", SE2-sample-tut-project_demo-repo)
        property ("sonar.organization", se2-sample-tut-project)
        property ("sonar.host.url", "https://sonarcloud.io")
        property ("sonar.buildbreaker.skip" , false)
        property ("sonar.qualitygate.wait", true)
        property ("sonar.java.coveragePlugin", jacoco)
        property ("sonar.coverage.jacoco.xmlReportPaths", "${project.projectDir}/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml")
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    implementation 'com.intuit.sdp:sdp-android:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.0'

    implementation 'org.jacoco:org.jacoco.core:0.8.8'

    /////////////////// database ///////////////////
    implementation 'androidx.room:room-runtime:2.5.1'
    androidTestImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    annotationProcessor 'androidx.room:room-compiler:2.5.1'
    implementation 'com.squareup.retrofit2:converter-jackson:2.7.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.3'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.10.3'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.10.3'
    ////////////////////////////////////////////////
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    testImplementation 'org.json:json:20180813'
}